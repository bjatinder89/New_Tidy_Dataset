good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[order(dataOutcome, dataOurState["Hospital.Name"]),]
if (grepl("^[0-9]+$", num)) {
if (as.numeric(num) > length(dataOutcome)) {
result <- NA
}
else {
result <- dataOurState[as.numeric(num), "Hospital.Name"]
}
}
else if (num == "best") {
result <- dataOurState[1, "Hospital.Name"]
}
else if (num == "worst") {
result <- dataOurState[length(dataOutcome), "Hospital.Name"]
}
else result <- NA
}
result
}
rankhospital("NC", "heart attack", "worst")
chk1 <- c("TX", "heart failure", 4)
chk2 <- c("MD", "heart attack", "worst")
chk3 <- c("MN", "heart attack", 5000)
dat <- data.table(chk1, chk2, chk3)
dat <- t(dat)
as.list(apply(dat, 1, function(x){do.call(rankHospital, as.list(x))}))
rankhospital("NC", "heart attack", "worst")
rankHospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% data$State)) {
result <- "invalid state"
}
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
result <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## Return hospital name in that state with the given rank
## 30-day death rate
dataPerState <- split(data, data$State)
dataOurState <- dataPerState[[state]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[order(dataOutcome, dataOurState["Hospital.Name"]),]
if (grepl("^[0-9]+$", num)) {
if (as.numeric(num) > length(dataOutcome)) {
result <- NA
}
else {
result <- dataOurState[as.numeric(num), "Hospital.Name"]
}
}
else if (num == "best") {
result <- dataOurState[1, "Hospital.Name"]
}
else if (num == "worst") {
result <- dataOurState[length(dataOutcome), "Hospital.Name"]
}
else result <- NA
}
result
}
chk1 <- c("TX", "heart failure", 4)
chk2 <- c("MD", "heart attack", "worst")
chk3 <- c("MN", "heart attack", 5000)
dat <- data.table(chk1, chk2, chk3)
dat <- t(dat)
as.list(apply(dat, 1, function(x){do.call(rankHospital, as.list(x))}))
rankhospital("NC", "heart attack", "worst")
rankHospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% data$State)) {
result <- "invalid state"
}
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
result <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## Return hospital name in that state with the given rank
## 30-day death rate
dataPerState <- split(data, data$State)
dataOurState <- dataPerState[[state]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[order(dataOutcome, dataOurState["Hospital.Name"]),]
if (grepl("^[0-9]+$", num)) {
if (as.numeric(num) > length(dataOutcome)) {
result <- NA
}
else {
result <- dataOurState[as.numeric(num), "Hospital.Name"]
}
}
else if (num == "best") {
result <- dataOurState[1, "Hospital.Name"]
}
else if (num == "worst") {
result <- dataOurState[length(dataOutcome), "Hospital.Name"]
}
else result <- NA
}
result
}
chk1 <- c("TX", "heart failure", 4)
chk2 <- c("MD", "heart attack", "worst")
chk3 <- c("MN", "heart attack", 5000)
dat <- data.table(chk1, chk2, chk3)
dat <- t(dat)
as.list(apply(dat, 1, function(x){do.call(rankHospital, as.list(x))}))
rankHospital("NC", "heart attack", "worst")
rankHospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
if (!(state %in% data$State)) {
result <- "invalid state"
}
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
result <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## Return hospital name in that state with the given rank
## 30-day death rate
dataPerState <- split(data, data$State)
dataOurState <- dataPerState[[state]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[order(dataOutcome, dataOurState["Hospital.Name"]),]
if (grepl("^[0-9]+$", num)) {
if (as.numeric(num) > length(dataOutcome)) {
result <- NA
}
else {
result <- dataOurState[as.numeric(num), "Hospital.Name"]
}
}
else if (num == "best") {
result <- dataOurState[1, "Hospital.Name"]
}
else if (num == "worst") {
result <- dataOurState[length(dataOutcome), "Hospital.Name"]
}
else result <- NA
}
result
}
rankHospital("NC", "heart attack", "worst")
rankHospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankHospital("TX", "pneumonia", 10)
rankHospital("NY", "heart attack", 7)
rankAll <- function(outcome, num = "best") {
dataAll <- data.frame(hospital = character(), state = character())
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome and num are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
dataAll <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## For each state, find the hospital of the given rank
dataPerState <- split(data, data$State)
for (stat in names(dataPerState)) {
dataOurState <- dataPerState[[stat]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[ order(dataOutcome, dataOurState["Hospital.Name"]), ]
if (num == "best") {
numState <- c(1)
} else {
if (num == "worst") {
numState <- length(dataOutcome)
} else {
numState <- num
}
}
dataPart <- data.frame(hospital = dataOurState[numState, "Hospital.Name"], state = stat, row.names = stat)
dataAll <- rbind(dataAll, dataPart)
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
dataAll
}
rankAll <- function(outcome, num = "best") {
dataAll <- data.frame(hospital = character(), state = character())
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome and num are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
dataAll <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## For each state, find the hospital of the given rank
dataPerState <- split(data, data$State)
for (stat in names(dataPerState)) {
dataOurState <- dataPerState[[stat]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[ order(dataOutcome, dataOurState["Hospital.Name"]), ]
if (num == "best") {
numState <- c(1)
} else {
if (num == "worst") {
numState <- length(dataOutcome)
} else {
numState <- num
}
}
dataPart <- data.frame(hospital = dataOurState[numState, "Hospital.Name"], state = stat, row.names = stat)
dataAll <- rbind(dataAll, dataPart)
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
dataAll
}
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
rankAll <- function(outcome, num = "best") {
dataAll <- data.frame(hospital = character(), state = character())
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that outcome and num are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) {
dataAll <- "invalid outcome"
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
## For each state, find the hospital of the given rank
dataPerState <- split(data, data$State)
for (stat in names(dataPerState)) {
dataOurState <- dataPerState[[stat]]
dataOutcome <- suppressWarnings(as.numeric(dataOurState[, outcomeKey]))
good <- complete.cases(dataOutcome)
dataOutcome <- dataOutcome[good]
dataOurState <- dataOurState[good,]
dataOurState <- dataOurState[ order(dataOutcome, dataOurState["Hospital.Name"]), ]
if (num == "best") {
numState <- c(1)
} else {
if (num == "worst") {
numState <- length(dataOutcome)
} else {
numState <- num
}
}
dataPart <- data.frame(hospital = dataOurState[numState, "Hospital.Name"], state = stat, row.names = stat)
dataAll <- rbind(dataAll, dataPart)
}
}
## Return a data frame with the hospital names and the (abbreviated) state name
dataAll
}
r <- rankAll("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankAll("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankAll("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
library(httr)
install.packages("httr")
library(httr)
cwd()
wd()
pwd()
directory()
library(sqldf)
install.packages("sqldf")
library(sqldf)
library(sqldf)
download.file(url1, destfile"acs.csv", header=TRUE)
download.file(url1, destfile="acs.csv", header=TRUE)
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url1, destfile="acs.csv", header=TRUE)
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url1, destfile="acs.csv", header=TRUE)
download.file(url1, destfile="acs.csv")
ddata<-read.csv("acs.csv")
head(ddata)
head(ddata, 1:2)
head(ddata, n=1:2)
head(ddata, n=[1:2])
head(ddata)
acs<-read.csv("acs.csv")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
detach("package:RMySQL", unload=TRUE)
install.packages("RMySQL")
head(acs)
detach("package:RMySQL", unload=TRUE)
unique(acs$AGEP)
a<-unique(acs$AGEP)
a
a
Z <- sqldf("select AGEP where unique from acs")
B <- sqldf("select distinct AGEP from acs")
b
B
identical(a, B$AGEP)
url1<-url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode<-readLines(url1)
close(url1)
htmlcode
c(nchar(htmlcode[10]), nchar(htmlcode[20]))
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
d
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(furl, "data.csv")
rdata= read.csv("data.csv")
head(rdata)
head(rdata)
sum(rdata$VAL == 24, na.rm=TRUE)
head(rdata, n=4)
tail(rdata, n=4)
tail(rdata)
summary(rdata)
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
adata<-download.file(furl, destfile = "adata.csv", header=TRUE)
adata<-download.file(furl, destfile = "adata.csv")
download.file(furl, destfile = "adata.csv")
read.csv(adata.csv)
read.csv("adata.csv")
head(read.csv("adata.csv"))
head(read.csv("adata.csv"), 4)
head(read.csv("adata.csv"))
qdata<-read.csv("adata.csv")
qdata
logic <- data$ACR ==3 & data$AGS == 6
which(logic)
logic <- qdata$ACR ==3 & qdata$AGS == 6
which(logic)
install.packages("jpeg")
libray(jpeg)
library(jpeg)
libray(jpeg)
libray(jpeg)
install.packages("jpeg")
libray(jpeg)
library(jpeg)
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(furl, destfile = "adata.jpg")
img1<-read.jpg("adata.jpg")
img1<-readJPEG("adata.jpg")
library(jpeg)
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(furl, destfile = "adata.jpg")
img1<-readJPEG("adata.jpg", native = TRUE)
download.file(furl, destfile = "adata.jpg", mode="wb")
img1<-readJPEG("adata.jpg", native = TRUE)
quand<-quantile(img1, probs = c(.3,.8))
quand
furl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(furl, destfile = "data1.csv")
datar<-read.csv("data1.csv")
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url1, destfile = "data1.csv")
download.file(url2, destfile = "data2.csv")
dat1<-read.csv("data1.csv")
dat2<-read.csv("data2.csv")
names(dat1)
names(dat2)
names(dat1)
names(dat1)
names(dat2)
dat1
head(dat1, 4)
head(dat1)
dat1
dat1
install.packages("dplyr")
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url1, destfile = "data1.csv")
adata<-read.csv("data1.csv", header=TRUE)
adata
strsplit(adata, wgtp)
strsplit(adata)
strsplit(adata, split
strsplit(adata,split = wgtp)
coln1<-names(adata)
coln1
strsplit(coln1,"^wgtp")
[[123]]
strsplit(coln1,"^wgtp")[[123]]
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url1, destfile = "data2.csv")
data21<-read.csv("data1.csv", header=TRUE)
data21
coln1<-names(data21)
head(data21, 4)
col1
col1<-names(data21)
col1
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url1, destfile = "data2.csv")
data21<-read.csv("data2.csv", header=TRUE)
head(data21, 4)
col1<-names(data21)
col1
head(data21, 4)
head(data21, 10)
data21<-read.csv("data2.csv", header=TRUE, skip = 4)
head(data21, 10)
data21<-read.csv("data2.csv", skip = 4)
head(data21, 10)
data21<-read.csv("data2.csv")
head(data21, 10)
cavg<-gsub(",","", data21[,5])
cavg
cavg1<-mean(cavg)
cavg1<-mean(as.null.default(cavg))
mean(as.null.default(cavg))
mean(as.numeric(cavg))
mean(as.numeric(cavg), na.rm = T)
mean(as.numeric(cavg), na.rm = T)
mean(as.numeric(cavg), na.rm = TRUE)
cavg<-gsub(",","", data21[,5])
cavg
mean(as.numeric(cavg[1:225]), na.rm = TRUE)
mean(as.numeric(cavg[1:215]), na.rm = TRUE)
data21<-read.csv("data2.csv")
cavg<-gsub(",","", data21[,5])
cavg
cavg<-gsub(",","", data21[,5], skip=4)
data21<-read.csv("data2.csv", skip=4)
cavg<-gsub(",","", data21[,5])
cavg
cavg
mean(as.numeric(cavg[1:215]), na.rm = TRUE)
cavg<-gsub(",","", data21[,5])
cavg1<-gsub("..", "NA")
cavg<-gsub(",","", data21[,5])
cavg1<-gsub("..", "NA", data21[,5])
cavg
cavg1
cavg
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url1, destfile = "data2.csv")
data21<-read.csv("data2.csv", nrow=190, skip=4)
head(data21, 10)
cavg<-gsub(",","", data21[,5])
cavg
mean(as.numeric(cavg1[1:215]), na.rm = TRUE)
mean(as.numeric(cavg1), na.rm = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz4data.csv")
data <- read.csv("quiz4data.csv")
clean <- gsub(",","",data[,5])
mean(as.numeric(clean[1:215]),na.rm = TRUE)
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url1, destfile = "data2.csv")
data21<-read.csv("data2.csv")
cavg<-gsub(",","", data21[,5])
cavg
mean(as.numeric(cavg1[1:215]), na.rm = TRUE)
url1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url1, destfile = "data2.csv")
data21<-read.csv("data2.csv")
cavg<-gsub(",","", data21[,5])
mean(as.numeric(cavg[1:215]), na.rm = TRUE)
data21
head(data21, 25)
data21<-read.csv("data2.csv")
head(data21, 8)
data21$X.2
data21<-read.csv("data2.csv", skip=4)
data21$X.2
data21<-read.csv("data2.csv", skip=4)
data21
data21$X.3
class(data21$X.3)
cdata<-as.character(data21$X.3)
class(cdata)
data21$X.3[grep("^United", data21$X.3)]
u1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
u2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(u1, destfile = "data4.csv")
download.file(u2, destfile = "data5.csv")
data41<-read.csv("data4.csv")
data51<-read.csv("data5.csv")
head(data41, 6)
head(data51, 6)
data41<-read.csv("data4.csv", skip=4)
data51<-read.csv("data5.csv")
head(data41, 6)
head(data51, 6)
